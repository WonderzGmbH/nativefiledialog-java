name: "ðŸ¤– New tag -> release"

on:
  push:
    tags:
      - 'v*'

jobs:
  linux_binary:
    name: Ubuntu - GCC
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Installing Dependencies
        run: sudo apt-get update && sudo apt-get install libgtk-3-dev
      - name: Configure
        run: cd nativefiledialog-extended && mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DNFD_BUILD_TESTS=OFF ..
      - name: Build
        run: cd nativefiledialog-extended && cmake --build build --target install
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: lib-linux
          path: |
            nativefiledialog-extended/install/lib/*

  macos_binary:
    name: MacOS latest - Clang
    runs-on: macos-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure
        run: cd nativefiledialog-extended && mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_BUILD_TYPE=Release -DNFD_BUILD_TESTS=OFF ..
      - name: Build
        run: cd nativefiledialog-extended && cmake --build build --target install
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: lib-mac
          path: |
            nativefiledialog-extended/install/lib/*

  windows_binary:
    name: Windows latest - MSVC
    runs-on: windows-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure
        run: cd nativefiledialog-extended && mkdir build && mkdir install && cd build && cmake -DCMAKE_INSTALL_PREFIX="../install" -DCMAKE_BUILD_TYPE=Release -DNFD_BUILD_TESTS=OFF ..
      - name: Build
        run: cd nativefiledialog-extended && cmake --build build --target install --config Release
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: lib-windows
          path: |
            nativefiledialog-extended/install/bin/*

  jar:
    runs-on: ubuntu-latest
    needs:
      - macos_binary
      - linux_binary
      - windows_binary
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8

      - name: Setup Gradle
        id: setup-java
        uses: gradle/gradle-build-action@v2

      - name: Download lib-mac binary
        uses: actions/download-artifact@v2
        with:
          name: lib-mac
          path: lib-mac
      - name: Download lib-linux binary
        uses: actions/download-artifact@v2
        with:
          name: lib-linux
          path: lib-linux
      - name: Download lib-windows binary
        uses: actions/download-artifact@v2
        with:
          name: lib-windows
          path: lib-windows

      - name: Copy binaries
        run: |
          mkdir src/main/resources
          cp lib-mac/libnfd.dylib src/main/resources/libnfd_mac.dylib
          cp lib-linux/libnfd.so src/main/resources/libnfd_linux.so
          cp lib-windows/nfd.dll src/main/resources/libnfd_win.dll

      - name: Copy secrets
        run: |
          echo "${{ secrets.SECRING_BASE64 }}" | base64 -d | zcat >> secring.gpg
          echo "" >> gradle.properties
          echo "signing.keyId=${{ secrets.SIGNING_KEY_ID }}" >> gradle.properties
          echo "signing.password=${{ secrets.SIGNING_PASSWORD }}" >> gradle.properties
          echo "ossrhUsername=${{ secrets.OSSRH_USERNAME }}" >> gradle.properties
          echo "ossrhPassword=${{ secrets.OSSRH_PASSWORD }}" >> gradle.properties

      - name: Build fat .jar
        uses: eskatos/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
        with:
          arguments: ":jar"

      - name: Upload .jar
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: |
            build/libs/*.jar

      - name: Sign
        uses: eskatos/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
        with:
          arguments: "sign"

      - name: Publish
        uses: eskatos/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
        with:
          arguments: "publish"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
